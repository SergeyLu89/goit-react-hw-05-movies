{"version":3,"file":"static/js/964.6aa5ed69.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/components/SearchForm/SearchForm.module.css?d6f1","components/SearchForm/SearchForm.jsx","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '0347cf19b71674ad49f472515ed975cd';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\nexport const getMoviesForQuery = async queryValue => {\n  const response = await axios.get(\n    `search/movie?query=${queryValue}&api_key=${KEY}`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"MoviesList_moviesList__P6SP5\",\"movieListItem\":\"MoviesList_movieListItem__pwpnH\",\"movieListItemLink\":\"MoviesList_movieListItemLink__O2a7F\",\"movieListItemTitle\":\"MoviesList_movieListItemTitle__6v2J3\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul className={css.moviesList}>\n      {movies.map(({ id, title, poster_path }) => (\n        <li key={id} className={css.movieListItem}>\n          <Link\n            state={{ from: location }}\n            className={css.movieListItemLink}\n            to={`/movies/${id}`}\n          >\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n              }\n              alt={title}\n              width=\"150\"\n            />\n            <p className={css.movieListItemTitle}>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SearchForm_form__o80os\",\"searchInput\":\"SearchForm_searchInput__h6REp\",\"submitBtn\":\"SearchForm_submitBtn__0lkB5\"};","import css from './SearchForm.module.css';\n\nconst SearchForm = ({ setSearchParams }) => {\n  const onFormSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const formQuery = form.elements.search.value.trim();\n\n    setSearchParams({ query: formQuery });\n\n    form.reset();\n  };\n  return (\n    <div>\n      <form className={css.form} onSubmit={onFormSubmit}>\n        <input\n          name=\"search\"\n          className={css.searchInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Enter movie titles\"\n        />\n        <button type=\"submit\" className={css.submitBtn}>\n          <span className={css.buttonLabel}>Search</span>\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default SearchForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"moviePageSybtitle\":\"Movies_moviePageSybtitle__xnDtQ\"};","import { getMoviesForQuery } from 'api/api';\nimport { Loader } from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchForm from 'components/SearchForm/SearchForm';\nimport css from './Movies.module.css';\nimport { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const queryValue = searchParams.get('query');\n  const [foundMovie, setFoundMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!queryValue) return;\n    const fechMoviesForQuery = async () => {\n      try {\n        setIsLoading(true);\n        const data = await getMoviesForQuery(queryValue);\n\n        setFoundMovie(data);\n      } catch (error) {\n        console.error(error);\n        // setError(error.message);\n        alert(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fechMoviesForQuery();\n  }, [queryValue]);\n\n  return isLoading ? (\n    <Loader />\n  ) : (\n    <div>\n      <SearchForm setSearchParams={setSearchParams} />\n      {foundMovie !== null && <MoviesList movies={foundMovie} />}\n      {foundMovie !== null && foundMovie.length === 0 && (\n        <h3 className={css.moviePageSybtitle}>Nothing found ðŸ˜¢</h3>\n      )}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","KEY","getTrending","response","data","results","getDetails","movieId","getCast","cast","getReviews","getMoviesForQuery","queryValue","movies","location","useLocation","className","css","map","id","title","poster_path","state","from","to","src","alt","width","setSearchParams","onSubmit","event","preventDefault","form","currentTarget","formQuery","elements","search","value","trim","query","reset","name","type","autoComplete","autoFocus","placeholder","useSearchParams","searchParams","get","useState","foundMovie","setFoundMovie","isLoading","setIsLoading","useEffect","fechMoviesForQuery","console","error","alert","message","Loader","MoviesList","length"],"sourceRoot":""}