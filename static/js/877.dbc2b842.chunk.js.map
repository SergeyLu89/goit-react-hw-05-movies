{"version":3,"file":"static/js/877.dbc2b842.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst KEY = '0347cf19b71674ad49f472515ed975cd';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`/trending/movie/day?api_key=${KEY}`);\n  return response.data.results;\n};\n\nexport const getDetails = async movieId => {\n  const response = await axios.get(`movie/${movieId}?api_key=${KEY}`);\n  return response.data;\n};\nexport const getCast = async movieId => {\n  const response = await axios.get(`movie/${movieId}/credits?api_key=${KEY}`);\n  return response.data.cast;\n};\n\nexport const getReviews = async movieId => {\n  const response = await axios.get(`movie/${movieId}/reviews?api_key=${KEY}`);\n  return response.data.results;\n};\nexport const getMoviesForQuery = async queryValue => {\n  const response = await axios.get(\n    `search/movie?query=${queryValue}&api_key=${KEY}`\n  );\n  return response.data.results;\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"movieDetailsBlok\":\"MovieDetails_movieDetailsBlok__x9QWo\",\"movieDetailsTitle\":\"MovieDetails_movieDetailsTitle__3itYh\",\"movieDetailsImg\":\"MovieDetails_movieDetailsImg__mJ0ic\",\"movieDetailsSlogan\":\"MovieDetails_movieDetailsSlogan__7obO0\",\"movieDetailsDescr\":\"MovieDetails_movieDetailsDescr__Gja7G\",\"movieDetailsList\":\"MovieDetails_movieDetailsList__goILT\",\"movieDetailsLinkBox\":\"MovieDetails_movieDetailsLinkBox__tPODt\",\"movieDetailsLink\":\"MovieDetails_movieDetailsLink__Bth2S\",\"movieDetailsLinkBack\":\"MovieDetails_movieDetailsLinkBack__IJEoB\"};","// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castListItem\":\"Cast_castListItem__CF66s\",\"castListSubtitle\":\"Cast_castListSubtitle__19KtD\",\"castListDescr\":\"Cast_castListDescr__6Dh64\"};","import { getCast } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Cast.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [filmCast, setFilmCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fechMoviesCast = async () => {\n      try {\n        setIsLoading(true);\n\n        const data = await getCast(movieId);\n\n        setFilmCast(data);\n      } catch (error) {\n        // setError(error.message);\n        alert(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fechMoviesCast();\n  }, [movieId]);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {filmCast !== null && (\n        <ul className={css.castList}>\n          {filmCast.map(({ id, name, character, profile_path }) => (\n            <li key={id} className={css.castListItem}>\n              <li key={id} className={css.castListItem}>\n                <img\n                  src={\n                    profile_path\n                      ? `https://image.tmdb.org/t/p/w500${profile_path}`\n                      : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n                  }\n                  alt=\"poster\"\n                  width=\"120\"\n                />\n\n                <h4 className={css.castListSubtitle}>{name}</h4>\n                <p className={css.castListDescr}>{character}</p>\n              </li>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nexport default Cast;\n","// extracted by mini-css-extract-plugin\nexport default {\"reviewsList\":\"Reviews_reviewsList__hDAQA\",\"reviewsListItem\":\"Reviews_reviewsListItem__FIdwO\",\"reviewsListItemSubtitle\":\"Reviews_reviewsListItemSubtitle__J1xvN\"};","import { getReviews } from 'api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport css from './Reviews.module.css';\nimport { Loader } from 'components/Loader/Loader';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [filmReview, setFilmReview] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fechMoviesReview = async () => {\n      try {\n        setIsLoading(true);\n\n        const data = await getReviews(movieId);\n\n        setFilmReview(data);\n      } catch (error) {\n        console.error(error);\n        // setError(error.message);\n        alert(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fechMoviesReview();\n  }, [movieId]);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {filmReview !== null && filmReview.length !== 0 ? (\n        <ul className={css.reviewsList}>\n          {filmReview.map(({ author, content, id }) => (\n            <li key={id} className={css.reviewsListItem}>\n              <h4 className={css.reviewsListItemSubtitle}>{author}</h4>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We dont have any reviews for this movie.</p>\n      )}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import { getDetails } from 'api/api';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, Route, Routes, useLocation, useParams } from 'react-router-dom';\nimport { Loader } from 'components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nimport Cast from 'components/Cast/Cast';\nimport Reviews from 'components/Reviews/Reviews';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [filmDetails, setFilmDetails] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [error, setError] = useState(null);\n  const location = useLocation();\n  const backLonkRef = useRef(location.state?.from ?? '/');\n  useEffect(() => {\n    if (!movieId) return;\n    const fechMoviesDetails = async () => {\n      try {\n        setIsLoading(true);\n\n        const data = await getDetails(movieId);\n\n        setFilmDetails(data);\n      } catch (error) {\n        // setError(error.message);\n        alert(`${error.message}`);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fechMoviesDetails();\n  }, [movieId]);\n  return (\n    <div>\n      {isLoading && <Loader />}\n      {filmDetails !== null && (\n        <div className={css.movieDetailsBlok}>\n          <Link className={css.movieDetailsLinkBack} to={backLonkRef.current}>\n            ◀ Back\n          </Link>{' '}\n          <h1 className={css.movieDetailsTitle}>{filmDetails.title}</h1>\n          <img\n            className={css.movieDetailsImg}\n            src={\n              filmDetails.poster_path\n                ? `https://image.tmdb.org/t/p/w500${filmDetails.poster_path}`\n                : 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n            }\n            alt={filmDetails.title}\n          />\n          <h3 className={css.movieDetailsSlogan}>\n            Slogan: \"{filmDetails.tagline}\"\n          </h3>\n          <p className={css.movieDetailsDescr}>{filmDetails.overview}</p>\n          <ul className={css.movieDetailsList}>\n            <li className={css.movieDetailsListItem}>\n              Language: {filmDetails.original_language}\n            </li>\n            <li className={css.movieDetailsListItem}>\n              {' '}\n              Release date: {filmDetails.release_date}\n            </li>\n            <li className={css.movieDetailsListItem}>\n              Rating: {filmDetails.vote_average}\n            </li>\n          </ul>\n          <div className={css.movieDetailsLinkBox}>\n            <Link className={css.movieDetailsLink} to=\"cast\">\n              Cast\n            </Link>\n            <Link className={css.movieDetailsLink} to=\"reviews\">\n              Reviews\n            </Link>\n          </div>\n          <div>\n            <Routes>\n              <Route path=\"cast\" element={<Cast />} />\n              <Route path=\"reviews\" element={<Reviews />} />\n            </Routes>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","KEY","getTrending","response","data","results","getDetails","movieId","getCast","cast","getReviews","getMoviesForQuery","queryValue","useParams","useState","filmCast","setFilmCast","isLoading","setIsLoading","useEffect","fechMoviesCast","alert","message","Loader","className","css","map","id","name","character","profile_path","src","alt","width","filmReview","setFilmReview","fechMoviesReview","console","error","length","author","content","filmDetails","setFilmDetails","location","useLocation","backLonkRef","useRef","state","from","fechMoviesDetails","to","current","title","poster_path","tagline","overview","original_language","release_date","vote_average","path","element"],"sourceRoot":""}